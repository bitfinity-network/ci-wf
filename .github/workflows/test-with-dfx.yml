name: "Build and Test"
on:
  workflow_call:
    inputs:
      # Tests script to launch integration (whatever) tests with DFX environment
      # If skipped tests would not be launched
      test-script:
        type: string
        required: false
      # Force skipping test-script if it is provided
      # Use this for advanced configuration
      skip-test:
        type: boolean
        required: false
      # Name of the github artfact to upload for reusing in next jobs
      # If not defined -> would skip artifact uploading
      output-artifact:
        type: string
        required: false
      # Script that builds artifact files and put them into .artifact directory
      artifact-script:
        type: string
        required: false
      # Additional artifact logic to run before tests
      artifact-pre-script:
        type: string
        required: false
      skip-target-cache:
        type: boolean
        required: false
      rs-skip-clippy:
        type: boolean
        required: false
    secrets:
      gh_token:
        required: true
      gh_login:
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  assemble-and-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/infinity-swap/ic-dev-full:latest
      credentials:
        username: ${{ secrets.gh_login }}
        password: ${{ secrets.gh_token }}

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.gh_token }}

      - uses: Swatinem/rust-cache@v1

      - name: "Updats"
        uses: actions-rs/cargo@v1
        with:
          command: update

      - name: Checking format
        run: |
          cargo fmt --all --check

      - name: Running clippy
        if: ${{ ! inputs.rs-skip-clippy }}
        run: |
          cargo clippy --all-features --all-targets

      - name: Runing tests script
        run: |
          echo "ENVIRONMENT"
          env
          ${{ inputs.entrypoint-script }}

      - name: "Current environment"
        run: |
          env

      - name: "Artifact initialization"
        if: ${{ inputs.output-artifact }}
        run: |
          rm -rf .artifact
          mkdir  .artifact
          ${{ inputs.artifact-pre-script }}

      - name: "Runing test script"
        if: ${{ inputs.test-script && ! inputs.skip-test }}
        run: ${{ inputs.test-script }}

      - name: "Preparing artifact files"
        if: ${{ inputs.output-artifact }}
        run: |
          ${{ inputs.artifact-script }}

          echo "Artifact content:"
          ls -laR .artifact

      - name: "Uploading artifact: ${{ inputs.output-artifact }}"
        if: ${{ inputs.output-artifact }}
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          retention-days: 3
          name: ${{ inputs.output-artifact }}
          path: .artifact/*

      - name: "Removing wasm modules from target if any"
        run: rm -f target/wasm32-unknown-unknown/release/*.wasm